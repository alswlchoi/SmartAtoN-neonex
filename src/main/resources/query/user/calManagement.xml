<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hankook.pg.content.user.myPageCalculate.dao.CalDao">
<select id="searchList" parameterType="com.hankook.pg.content.user.myPageCalculate.vo.CalVo" resultType="com.hankook.pg.content.user.myPageCalculate.vo.CalVo">
<include refid="COMMON.sqlPagingTop" />
SELECT
	LIST.*
FROM
	(SELECT
		PTS.TC_RESERV_CODE AS RESERV_CODE,/*예약번호*/
		CONCAT(SUBSTRING(PTS.TC_REG_DT,1,4),'.',SUBSTRING(PTS.TC_REG_DT,5,2),'.',SUBSTRING(PTS.TC_REG_DT,7,2)) AS REG_DT,/*접수일자*/
		(
			SELECT DISTINCT IF(PTR.TR_TRACK_TYPE='TYP00','공동','단독')
			FROM PG_TRACK_RESERV PTR
			LEFT JOIN PG_TRACK PT
				ON PTR.TR_TRACK_CODE = PT.T_ID
			WHERE
				 1=1
				AND PTR.TC_SEQ =PTS.TC_SEQ
				AND PTR.TC_DAY =PTS.TC_DAY
		) AS TRACK_TYPE,
		(
			SELECT GROUP_CONCAT(PT.T_NICKNAME SEPARATOR '<![CDATA[</br>]]>')
			FROM PG_TRACK_RESERV PTR
			LEFT JOIN PG_TRACK PT
				ON PTR.TR_TRACK_CODE = PT.T_ID
			WHERE
				 1=1
				AND PTR.TC_SEQ =PTS.TC_SEQ
				AND PTR.TC_DAY =PTS.TC_DAY
		) AS TRACK,/*사용할 트랙명*/
		CONCAT(SUBSTRING(PTS.TC_DAY,1,4),'.',SUBSTRING(PTS.TC_DAY,5,2),'.',SUBSTRING(PTS.TC_DAY,7,2)) AS START_DATE,/*이용일시 시작*/
		CONCAT(SUBSTRING(PTS.TC_DAY2,1,4),'.',SUBSTRING(PTS.TC_DAY2,5,2),'.',SUBSTRING(PTS.TC_DAY2,7,2)) AS END_DATE,/*이용일시 종료*/
		CASE WHEN PTS.TC_APPROVAL = '2' THEN 'N'
			WHEN (PTS.TC_APPROVAL = '3' AND PTS.TC_STEP ='00002') THEN 'Y'
			WHEN (PTS.TC_APPROVAL = '3' AND PTS.TC_STEP ='00003') THEN 'END'
			ELSE NULL
			END AS STATUS,/*상태 2:예약취소 3:승인완료 00002시험완료 00003정산완료*/
		IF(PTS.TC_MEMO IS NULL ||PTS.TC_MEMO='','사유가 없습니다.',PTS.TC_MEMO) AS MEMO,
		PTS.TC_REG_USER AS REG_USER
	FROM PG_TEST_SCHDULE PTS/*시험로*/
	WHERE PTS.TC_APPROVAL ='2' OR (PTS.TC_APPROVAL ='3' AND PTS.TC_STEP = '00003')
	UNION
	SELECT
		PSS.WSS_RESERV_CODE AS RESERV_CODE, /*예약번호*/
		CONCAT(SUBSTRING(PSS.WSS_REG_DT,1,4),'.',SUBSTRING(PSS.WSS_REG_DT,5,2),'.',SUBSTRING(PSS.WSS_REG_DT,7,2)) AS REG_DT,/*접수일자*/
		'' AS TRACK_TYPE,/*유형*/
		PS.WS_NAME AS TRACK,/*부대시설명*/
		CONCAT(SUBSTRING(PSS.WSS_ST_DAY,1,4),'.',SUBSTRING(PSS.WSS_ST_DAY,5,2),'.',SUBSTRING(PSS.WSS_ST_DAY,7,2)) AS START_DATE,/*이용일시 시작*/
		CONCAT(SUBSTRING(PSS.WSS_ED_DAY,1,4),'.',SUBSTRING(PSS.WSS_ED_DAY,5,2),'.',SUBSTRING(PSS.WSS_ED_DAY,7,2)) AS END_DATE,/*이용일시 종료*/
		CASE WHEN PSS.WSS_APPROVAL = 'C' THEN 'N'
			WHEN PSS.WSS_APPROVAL ='D' THEN 'Y'
			ELSE NULL
			END AS STATUS,
		/*상태 Y:승인완료 R:승인거절 D:사용완료 N:승인대기 C:예약취소*/
		IF(PSS.WSS_MEMO IS NULL ||PSS.WSS_MEMO='','본인취소.',PSS.WSS_MEMO) AS MEMO,
		PSS.WSS_REG_USER AS REG_USER
		FROM PG_SHOP_SCHDULE PSS/*부대시설*/
	LEFT JOIN PG_SHOP PS
		ON PSS.WS_CODE =PS.WS_CODE
	WHERE PSS.WSS_APPROVAL ='D' OR PSS.WSS_APPROVAL ='C') LIST
WHERE LIST.REG_USER = #{regUser}
ORDER BY REG_DT DESC
<include refid="COMMON.sqlPagingBottom" />
</select>

<select id="searchListCnt" parameterType="com.hankook.pg.content.user.myPageCalculate.vo.CalVo" resultType="_int">
<include refid="COMMON.sqlCountTop" />
SELECT
	LIST.*
FROM
	(SELECT
		PTS.TC_RESERV_CODE AS RESERV_CODE,/*예약번호*/
		PTS.TC_REG_DT AS REG_DT,/*접수일자*/
		(
			SELECT DISTINCT PTR.TR_TRACK_TYPE
			FROM PG_TRACK_RESERV PTR
			LEFT JOIN PG_TRACK PT
				ON PTR.TR_TRACK_CODE = PT.T_ID
			WHERE
				 1=1
				AND PTR.TC_SEQ =PTS.TC_SEQ
				AND PTR.TC_DAY =PTS.TC_DAY
		) AS TRACK_TYPE,
		(
			SELECT GROUP_CONCAT(PT.T_NICKNAME SEPARATOR ',')
			FROM PG_TRACK_RESERV PTR
			LEFT JOIN PG_TRACK PT
				ON PTR.TR_TRACK_CODE = PT.T_ID
			WHERE
				 1=1
				AND PTR.TC_SEQ =PTS.TC_SEQ
				AND PTR.TC_DAY =PTS.TC_DAY
		) AS TRACK,/*사용할 트랙명*/
		PTS.TC_DAY AS START_DATE,/*이용일시 시작*/
		PTS.TC_DAY2 AS END_DATE,/*이용일시 종료*/
		CASE WHEN PTS.TC_APPROVAL = '2' THEN 'N'
			WHEN (PTS.TC_APPROVAL = '3' AND PTS.TC_STEP ='00002') THEN 'Y'
			WHEN (PTS.TC_APPROVAL = '3' AND PTS.TC_STEP ='00003') THEN 'END'
			ELSE NULL
			END AS STATUS,/*상태 2:예약취소 3:승인완료 00001:시험중 00002시험완료 00003정산완료*/
		IF(PTS.TC_MEMO IS NULL ||PTS.TC_MEMO='','사유가 없습니다.',PTS.TC_MEMO) AS MEMO,
		PTS.TC_REG_USER AS REG_USER
	FROM PG_TEST_SCHDULE PTS/*시험로*/
	WHERE PTS.TC_APPROVAL ='2' OR (PTS.TC_APPROVAL ='3' AND (PTS.TC_STEP = '00002' OR PTS.TC_STEP = '00003'))
	UNION
	SELECT
		PSS.WSS_RESERV_CODE AS RESERV_CODE, /*예약번호*/
		PSS.WSS_REG_DT AS REG_DT,/*접수일자*/
		NULL AS TRACK_TYPE,/*유형*/
		PS.WS_NAME AS TRACK,/*부대시설명*/
		PSS.WSS_ST_DAY AS START_DATE,/*이용일시 시작*/
		PSS.WSS_ED_DAY AS END_DATE,/*이용일시 종료*/
		CASE WHEN PSS.WSS_APPROVAL = 'C' THEN 'N'
			WHEN PSS.WSS_APPROVAL ='D' THEN 'Y'
			ELSE NULL
			END AS STATUS,
		/*상태 Y:승인완료 R:승인거절 D:사용완료 N:승인대기 C:예약취소*/
		IF(PSS.WSS_MEMO IS NULL ||PSS.WSS_MEMO='','사유가 없습니다.',PSS.WSS_MEMO) AS MEMO,
		PSS.WSS_REG_USER AS REG_USER
		FROM PG_SHOP_SCHDULE PSS/*부대시설*/
	LEFT JOIN PG_SHOP PS
		ON PSS.WS_CODE =PS.WS_CODE
	WHERE PSS.WSS_APPROVAL ='D' OR PSS.WSS_APPROVAL ='C') LIST
WHERE LIST.REG_USER =#{regUser}
ORDER BY REG_DT DESC
<include refid="COMMON.sqlCountBottom" />
</select>

	<select id="getOne" parameterType="java.util.ArrayList" resultType="com.hankook.pg.content.user.myPageCalculate.vo.CalVo">
	SELECT TC_RESERV_CODE AS RESERV_CODE,
		CONCAT(SUBSTRING(TC_DAY,1,4),'.',SUBSTRING(TC_DAY,5,2),'.',SUBSTRING(TC_DAY,7,2)) AS START_DATE,/*이용일시 시작*/
		CONCAT(SUBSTRING(TC_DAY2,1,4),'.',SUBSTRING(TC_DAY2,5,2),'.',SUBSTRING(TC_DAY2,7,2)) AS END_DATE/*이용일시 종료*/
	FROM PG_TEST_SCHDULE
	WHERE 1=1
	<foreach collection="codeArr" item="codeArr" open="AND TC_RESERV_CODE IN (" close=")" separator=",">
		#{codeArr}
	</foreach>
	</select>
	<select id="getRfidLogList" parameterType="java.util.ArrayList" resultType="com.hankook.pg.content.user.myPageCalculate.vo.CalVo">
	SELECT PRL.TC_RESERV_CODE AS RESERV_CODE,
		PRL.IN_TIME ,
		PRL.OUT_TIME ,
		PRL.CAR_TAG_ID AS TAG_ID,
		PRL.T_ID,
		PT.T_NAME AS TRACK,
		PRL.DIFF_TIME
	FROM PG_RFID_LOG PRL,PG_TRACK PT
	WHERE 1=1
		AND PRL.T_ID =PT.T_ID
	<foreach collection="codeArr" item="codeArr" open="AND PRL.TC_RESERV_CODE IN (" close=")" separator=",">
		#{codeArr}
	</foreach>
	ORDER BY PRL.IN_TIME ASC,PRL.RL_SEQ
	</select>
	<select id="getPayList" parameterType="java.util.ArrayList" resultType="com.hankook.pg.content.admin.trReserve.dto.TrPayDto">
	SELECT PP.P_SEQ,
		PP.COMP_CODE,
		PP.P_PAY,
		CASE WHEN PP.P_TYPE ='TYP00' THEN '공동'
			WHEN PP.P_TYPE = 'TYP01' THEN '단독'
			WHEN PP.P_TYPE = 'TYP02' THEN '입장료'
			ELSE '부대시설' END AS P_TYPE,
		PP.P_RESERV_CODE,
		CONCAT(SUBSTRING(PP.P_DAY,1,4),'.',SUBSTRING(PP.P_DAY,5,2),'.',SUBSTRING(PP.P_DAY,7,2)) AS P_DAY,
		PP.P_REASON,
		CASE WHEN PP.P_TYPE ='TYP00' THEN (SELECT T_NAME FROM PG_TRACK PT WHERE PT.T_ID=PP.T_ID)
			WHEN PP.P_TYPE = 'TYP01' THEN (SELECT T_NAME FROM PG_TRACK PT WHERE PT.T_ID=PP.T_ID)
		  WHEN PP.P_TYPE = 'TYP02' THEN (SELECT T_NICKNAME FROM PG_TRACK PT WHERE PT.T_ID=PP.T_ID)
			ELSE (SELECT WS_NAME FROM PG_SHOP PS WHERE PS.WS_CODE=PP.T_ID) END AS T_ID,
		PP.P_USE_TIME,
		PP.P_DISCOUNT,
		PP.P_PRODUCT_PAY,
		PP.P_APPLY_TIME,
		IF(PP.P_CANCEL_PERCENT is null||PP.P_CANCEL_PERCENT = '','0',PP.P_CANCEL_PERCENT) AS P_CANCEL_PERCENT,
		PP.P_PAY_TYPE
	FROM PG_PAY PP
	WHERE 1=1
	<foreach collection="codeArr" item="codeArr" open="AND PP.P_RESERV_CODE IN (" close=")" separator=",">
		#{codeArr}
	</foreach>
	ORDER BY PP.P_DAY,CASE WHEN PP.P_PAY_TYPE ='DEFAULT' THEN 1 ELSE 2 END,PP.P_APPLY_TIME DESC	</select>
	<select id="getRfidLogToPay" resultType="com.hankook.pg.content.user.myPageCalculate.vo.CalToPay" parameterType="com.hankook.pg.content.user.myPageCalculate.vo.CalToPay">
SELECT
	PRL.TC_RESERV_CODE ,
	PRL.TC_DAY ,
	PRL.IN_TIME ,
	PRL.OUT_TIME ,
	PRL.TAG_ID ,
	PRL.DIFF_TIME,
	PRL.T_ID,
	PTR.TR_TRACK_CODE,
	PTR.TR_TRACK_TYPE ,
	PTR.TR_TRACK_NAME ,
	PTR.TR_TRACK_NICKNAME ,
	PTR.TR_PRICE ,
	PTR.TR_PRICE_ADD,
	PTR.TR_PRICE_SOLO,
	PTS.COMP_CODE,
	PTS.COMP_NAME ,
	IF(PD.DC_COUNT is null||PD.DC_COUNT = '','0',PD.DC_COUNT) AS DC_COUNT
FROM PG_RFID_LOG PRL
	left join PG_TEST_SCHDULE PTS on PRL.TC_RESERV_CODE =PTS.TC_RESERV_CODE
	left join PG_TRACK_RESERV PTR on PRL.TC_DAY =PTR.TC_DAY and PTS.TC_SEQ =PTR.TC_SEQ  and PRL.T_ID = PTR.TR_TRACK_CODE
	left join PG_DISCOUNT PD on PTS.COMP_CODE =PD.COMP_CODE
where 1=1
	AND PRL.TC_RESERV_CODE = #{tcReservCode}
	AND PRL.TC_DAY= #{tcDay}
ORDER BY PRL.TC_DAY,PRL.IN_TIME
	</select>

	<select id="getTcDayList" resultType="string">
select PTR.TC_DAY
from PG_TEST_SCHDULE PTS
	,PG_TRACK_RESERV PTR
where PTS.TC_RESERV_CODE =#{reservCode}
	and PTS.TC_SEQ =PTR.TC_SEQ
order by PTR.TC_DAY
	</select>

	<select id="getTrTrackType" resultType="string">
select DISTINCT A.TR_TRACK_TYPE
from PG_TRACK_RESERV A,PG_TEST_SCHDULE B
where A.TC_SEQ =B.TC_SEQ
	and A.TC_DAY =B.TC_DAY
	and B.TC_RESERV_CODE =#{reservCode}
	</select>

	<insert id="insertPay" parameterType="com.hankook.pg.content.admin.trReserve.dto.TrPayDto">
	INSERT INTO PG_PAY
	(
		COMP_CODE,
		P_PAY,
		P_TYPE,
		P_RESERV_CODE,
		P_DAY,
		P_REASON,
		T_ID,
		P_USE_TIME,
		P_DISCOUNT,
		P_PRODUCT_PAY,
		P_APPLY_TIME,
		P_PAY_TYPE
	) VALUES(
		#{compCode},
		#{pPay},
		#{pType},
		#{pReservCode},
		#{pDay},
		#{pReason},
		#{tId},
		#{pUseTime},
		#{pDiscount},
		#{pProductPay},
		#{pApplyTime},
		#{pPayType}
	)
	</insert>

	<select id="getGnrPrice" resultType="_int">
	select T_PRICE from PG_TRACK PT
	where T_ID ='T000'
	</select>
	<select id="getDayCarCnt" parameterType="com.hankook.pg.content.admin.trReserve.dto.TrPayDto" resultType="com.hankook.pg.content.admin.trReserve.dto.TrPayDto">
	select IF(sum(C.CAR_CNT) IS NULL,0,sum(C.CAR_CNT)) AS CAR_CNT,
		C.TC_RESERV_CODE,
		IF(PD.DC_COUNT IS NULL ,0,PD.DC_COUNT) AS P_DISCOUNT,
		(SELECT PT.T_PRICE FROM PG_TRACK PT where PT.T_ID='T000') AS P_PRODUCT_PAY,
		PD.COMP_CODE
	from (select
		PRG.TC_DAY ,
		PRG.CAR_RFID_ID ,
		count(*) AS CAR_CNT,
		PRG.TC_RESERV_CODE
	from PG_RFID_GENERAL PRG
	where
		PRG.TC_RESERV_CODE = #{pReservCode}
		and PRG.TC_DAY =#{pDay}
	group by TC_DAY ,CAR_RFID_ID) C
	left join PG_TEST_SCHDULE PTS
	on C.TC_RESERV_CODE = PTS.TC_RESERV_CODE
	left join PG_DISCOUNT PD
	on PTS.COMP_CODE =PD.COMP_CODE
	</select>
</mapper>