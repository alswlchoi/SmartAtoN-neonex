<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hankook.pg.content.admin.statistics.dao.StatisticsDao">
	<!--통계 시험로별 이용이력 전체 -->
	<select id="notrackinfo" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
		SELECT PRL.RL_SEQ, PRL.TC_DAY, PT.T_ID, PT.T_NAME, PTS.COMP_NAME, SUM(PRL.DIFF_TIME) AS DIFF_TIME
     		   , (SELECT TR_TRACK_TYPE FROM PG_TRACK_RESERV PTR
     				WHERE PTS.TC_SEQ = PTR.TC_SEQ AND PT.T_ID = PTR.TR_TRACK_CODE AND PRL.TC_DAY = PTR.TC_DAY) AS TR_TRACK_TYPE
		FROM PG_RFID_LOG PRL
		LEFT JOIN PG_TEST_SCHDULE PTS ON PRL.TC_RESERV_CODE = PTS.TC_RESERV_CODE
		LEFT JOIN PG_TRACK PT ON PRL.T_ID = PT.T_ID
		WHERE PTS.COMP_CODE != 'THINT'
		<if test = 'tName != null and tName !=""'>
			AND PT.T_NAME LIKE CONCAT('%',#{tName},'%')
		</if>
		<choose>
			<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
				AND (
			      PTS.TC_DAY BETWEEN #{tcDay} AND #{tcDay2}
			      OR PTS.TC_DAY2 BETWEEN #{tcDay} AND #{tcDay2}
			      OR (PTS.TC_DAY <![CDATA[<=]]> #{tcDay} AND PTS.TC_DAY2 >= #{tcDay2} )
			     )
			</when>
			<otherwise>
				AND(
				  DATE(PTS.TC_DAY) = DATE(NOW())
				)
			</otherwise>
		</choose>
		GROUP BY PRL.TC_DAY, PT.T_ID, PTS.COMP_CODE
	</select>
	
	<!--통계 시험로별 이용이력  -->
	<select id="trackinfo" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
		<include refid="COMMON.sqlPagingTop" />
		SELECT PRL.RL_SEQ, PRL.TC_DAY, PT.T_ID, PT.T_NAME, PTS.COMP_NAME, SUM(PRL.DIFF_TIME) AS DIFF_TIME
     		   , (SELECT TR_TRACK_TYPE FROM PG_TRACK_RESERV PTR
     				WHERE PTS.TC_SEQ = PTR.TC_SEQ AND PT.T_ID = PTR.TR_TRACK_CODE AND PRL.TC_DAY = PTR.TC_DAY) AS TR_TRACK_TYPE
		FROM PG_RFID_LOG PRL
		LEFT JOIN PG_TEST_SCHDULE PTS ON PRL.TC_RESERV_CODE = PTS.TC_RESERV_CODE
		LEFT JOIN PG_TRACK PT ON PRL.T_ID = PT.T_ID
		WHERE PTS.COMP_CODE != 'THINT'
		<if test = 'tName != null and tName !=""'>
			AND PT.T_NAME LIKE CONCAT('%',#{tName},'%')
		</if>
		<choose>
			<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
				AND (
			      PTS.TC_DAY BETWEEN #{tcDay} AND #{tcDay2}
			      OR PTS.TC_DAY2 BETWEEN #{tcDay} AND #{tcDay2}
			      OR (PTS.TC_DAY <![CDATA[<=]]> #{tcDay} AND PTS.TC_DAY2 >= #{tcDay2} )
			     )
			</when>
			<otherwise>
				AND(
				  DATE(PTS.TC_DAY) = DATE(NOW())
				)
			</otherwise>
		</choose>
		GROUP BY PRL.TC_DAY, PT.T_ID, PTS.COMP_CODE
		<include refid="COMMON.sqlPagingBottom" />
	</select>

<!-- 통계 시험로별 이용이력 - 페이징  -->
	<select id="trackcnt" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="int">
		<include refid="COMMON.sqlCountTop" />
		SELECT PRL.RL_SEQ, PRL.TC_DAY, PT.T_ID, PT.T_NAME, PTS.COMP_NAME, SUM(PRL.DIFF_TIME) AS DIFF_TIME
     		   , (SELECT TR_TRACK_TYPE FROM PG_TRACK_RESERV PTR
     				WHERE PTS.TC_SEQ = PTR.TC_SEQ AND PT.T_ID = PTR.TR_TRACK_CODE AND PRL.TC_DAY = PTR.TC_DAY) AS TR_TRACK_TYPE
		FROM PG_RFID_LOG PRL
		LEFT JOIN PG_TEST_SCHDULE PTS ON PRL.TC_RESERV_CODE = PTS.TC_RESERV_CODE
		LEFT JOIN PG_TRACK PT ON PRL.T_ID = PT.T_ID
		WHERE PTS.COMP_CODE != 'THINT'
		<if test = 'tName != null and tName !=""'>
			AND PT.T_NAME LIKE CONCAT('%',#{tName},'%')
		</if>
		<choose>
			<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
				AND (
			      PTS.TC_DAY BETWEEN #{tcDay} AND #{tcDay2}
			      OR PTS.TC_DAY2 BETWEEN #{tcDay} AND #{tcDay2}
			      OR (PTS.TC_DAY <![CDATA[<=]]> #{tcDay} AND PTS.TC_DAY2 >= #{tcDay2} )
			     )
			</when>
			<otherwise>
				AND(
				  DATE(PTS.TC_DAY) = DATE(NOW())
				)
			</otherwise>
		</choose>
		GROUP BY PRL.TC_DAY, PT.T_ID, PTS.COMP_CODE
		<include refid="COMMON.sqlCountBottom"/>
	</select>

<!--통계 시험로별 이용이력 -리스트 불러오기  -->
	<select id="tracklist" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
		SELECT T_NAME
		FROM PG_TRACK
		WHERE T_ID NOT LIKE CONCAT ('%','T000','%') AND T_DEL_YN = 'N'
	</select>

<!--회원사별 시험이력 - 부대시설 전체  -->
	<select id="nostatshop" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
		SELECT ROW_NUMBER() OVER(ORDER BY PSS.WSS_SEQ) as NUM,
			   PS.WS_NAME , PP.P_PAY , PSS.WSS_ST_DAY , PC.COMP_NAME ,
			   PSS.WSS_RESERV_CODE , PSS.WSS_REG_DT
		FROM PG_SHOP_SCHDULE PSS
	 		 LEFT JOIN PG_SHOP PS ON PSS.WS_CODE = PS.WS_CODE
			 LEFT JOIN PG_PAY PP ON PSS.WSS_RESERV_CODE = PP.P_RESERV_CODE
			 LEFT JOIN PG_COMPANY PC ON PSS.COMP_CODE = PC.COMP_CODE
		WHERE WSS_APPROVAL = 'D' 
		<choose>
			<when test="wssStDay != null and wssStDay != '' and wssEdDay != null and wssEdDay != ''">
				 AND (
			      PSS.WSS_ST_DAY BETWEEN #{wssStDay} AND #{wssEdDay}
			      OR PSS.WSS_ED_DAY BETWEEN #{wssStDay} AND #{wssEdDay}
			      OR (PSS.WSS_ST_DAY <![CDATA[<=]]> #{wssStDay} AND PSS.WSS_ED_DAY >= #{wssEdDay} )
			      )
			</when>
			<otherwise>
				 AND(
				 	DATE(PSS.WSS_ST_DAY) = DATE(NOW())
				 )
			</otherwise>
		</choose>
<!-- 	     검색창란에 (기업)회사명 입력 -->
		 <if test="text != null and text != ''">
		     AND (
		     PC.COMP_NAME LIKE CONCAT('%',#{text},'%')
		      )
		 </if>
		ORDER BY PSS.WSS_ST_DAY
	</select>

<!--회원사별 시험이력 - 부대시설  -->
	<select id="statshop" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
		<include refid="COMMON.sqlPagingTop" />
		SELECT ROW_NUMBER() OVER(ORDER BY PSS.WSS_SEQ) as NUM,
			   PS.WS_NAME , PP.P_PAY , PSS.WSS_ST_DAY , PC.COMP_NAME ,
			   PSS.WSS_RESERV_CODE , PSS.WSS_REG_DT
		FROM PG_SHOP_SCHDULE PSS
	 		 LEFT JOIN PG_SHOP PS ON PSS.WS_CODE = PS.WS_CODE
			 LEFT JOIN PG_PAY PP ON PSS.WSS_RESERV_CODE = PP.P_RESERV_CODE
			 LEFT JOIN PG_COMPANY PC ON PSS.COMP_CODE = PC.COMP_CODE
		WHERE WSS_APPROVAL = 'D' 
		<choose>
			<when test="wssStDay != null and wssStDay != '' and wssEdDay != null and wssEdDay != ''">
				 AND (
			      PSS.WSS_ST_DAY BETWEEN #{wssStDay} AND #{wssEdDay}
			      OR PSS.WSS_ED_DAY BETWEEN #{wssStDay} AND #{wssEdDay}
			      OR (PSS.WSS_ST_DAY <![CDATA[<=]]> #{wssStDay} AND PSS.WSS_ED_DAY >= #{wssEdDay} )
			      )
			</when>
			<otherwise>
				 AND(
				 	DATE(PSS.WSS_ST_DAY) = DATE(NOW())
				 )
			</otherwise>
		</choose>
<!-- 	     검색창란에 (기업)회사명 입력 -->
		 <if test="text != null and text != ''">
		     AND (
		     PC.COMP_NAME LIKE CONCAT('%',#{text},'%')
		      )
		 </if>
		ORDER BY PSS.WSS_ST_DAY
		<include refid="COMMON.sqlPagingBottom" />
	</select>

<!--회원사별 시험이력 - 부대시설 - 페이징  --> 
	<select id="statshopcnt" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="int">
		<include refid="COMMON.sqlCountTop" />
		SELECT ROW_NUMBER() OVER(ORDER BY PSS.WSS_SEQ) as NUM,
			   PS.WS_NAME , PP.P_PAY , PSS.WSS_ST_DAY , PC.COMP_NAME ,
			   PSS.WSS_RESERV_CODE , PSS.WSS_REG_DT
		FROM PG_SHOP_SCHDULE PSS
	 		 LEFT JOIN PG_SHOP PS ON PSS.WS_CODE = PS.WS_CODE
			 LEFT JOIN PG_PAY PP ON PSS.WSS_RESERV_CODE = PP.P_RESERV_CODE
			 LEFT JOIN PG_COMPANY PC ON PSS.COMP_CODE = PC.COMP_CODE
		WHERE WSS_APPROVAL = 'D' 
		<choose>
			<when test="wssStDay != null and wssStDay != '' and wssEdDay != null and wssEdDay != ''">
				 AND (
			      PSS.WSS_ST_DAY BETWEEN #{wssStDay} AND #{wssEdDay}
			      OR PSS.WSS_ED_DAY BETWEEN #{wssStDay} AND #{wssEdDay}
			      OR (PSS.WSS_ST_DAY <![CDATA[<=]]> #{wssStDay} AND PSS.WSS_ED_DAY >= #{wssEdDay} )
			      )
			</when>
			<otherwise>
				 AND(
				 	DATE(PSS.WSS_ST_DAY) = DATE(NOW())
				 )
			</otherwise>
		</choose>
<!-- 	     검색창란에 (기업)회사명 입력 -->
		 <if test="text != null and text != ''">
		     AND (
		     PC.COMP_NAME LIKE CONCAT('%',#{text},'%')
		      )
		 </if>
		ORDER BY PSS.WSS_ST_DAY
		<include refid="COMMON.sqlCountBottom" />
	</select>

<!--회원사별 시험이력 전체 페이징 X-->	
	<select id="nostatcompany" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
			SELECT PTS.TC_RESERV_CODE , PTS.TC_DAY , PTS.COMP_NAME , 
				   GROUP_CONCAT(DISTINCT PTR.TR_TRACK_NAME separator '<![CDATA[</br>]]>') TR_TRACK_NAME ,
				   T.APPLY_TIME , T.PAY
			FROM PG_TEST_SCHDULE PTS
			LEFT JOIN PG_TRACK_RESERV PTR ON PTR.TC_SEQ = PTS.TC_SEQ AND PTR.TC_DAY = PTS.TC_DAY 
			LEFT JOIN (SELECT P_DAY , P_RESERV_CODE , SUM(P_APPLY_TIME) AS APPLY_TIME ,SUM((P_PAY)*1.1) AS PAY ,
						GROUP_CONCAT(DISTINCT T_ID separator '<![CDATA[</br>]]>') T_ID  
						FROM PG_PAY
						WHERE P_RESERV_CODE NOT LIKE CONCAT('%','F','%')
						GROUP BY P_DAY , P_RESERV_CODE ) T 
				 ON PTS.TC_DAY = T.P_DAY AND PTS.TC_RESERV_CODE = T.P_RESERV_CODE
			WHERE PTS.TC_STEP = '00003' 
			<if test="text != null and text != ''">
				AND (
				 PTS.COMP_NAME LIKE CONCAT('%',#{text},'%')				
				)
			</if>
			<choose>
				<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
					  AND (
					      PTS.TC_DAY BETWEEN #{tcDay} AND #{tcDay2}
					      OR PTS.TC_DAY2 BETWEEN #{tcDay} AND #{tcDay2}
					      OR (PTS.TC_DAY <![CDATA[<=]]> #{tcDay} AND PTS.TC_DAY2 >= #{tcDay2} )
				      )
				</when>
				<otherwise>
					   AND (
					      DATE(PTS.TC_DAY) = DATE(NOW())
				      )
				</otherwise>
			</choose>
    	 	<if test="tcApproval != null and tcApproval != ''">
    	  		AND(
		        PTS.TC_RESERV_CODE LIKE CONCAT('%',#{tcApproval},'%')
		      )
    	  	</if>
			GROUP BY PTS.TC_SEQ , PTS.TC_DAY , PTS.TC_RESERV_CODE 
			ORDER BY PTS.TC_DAY DESC
	</select>
	
<!--회원사별 시험이력 -->
	<select id="statcompany" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
		<include refid="COMMON.sqlPagingTop" />
			SELECT PTS.TC_RESERV_CODE , PTS.TC_DAY , PTS.COMP_NAME , 
				   GROUP_CONCAT(DISTINCT PTR.TR_TRACK_NAME separator '<![CDATA[</br>]]>') TR_TRACK_NAME ,
				   T.APPLY_TIME , T.PAY
			FROM PG_TEST_SCHDULE PTS
			LEFT JOIN PG_TRACK_RESERV PTR ON PTR.TC_SEQ = PTS.TC_SEQ AND PTR.TC_DAY = PTS.TC_DAY 
			LEFT JOIN (SELECT P_DAY , P_RESERV_CODE , SUM(P_APPLY_TIME) AS APPLY_TIME ,SUM((P_PAY)*1.1) AS PAY ,
						GROUP_CONCAT(DISTINCT T_ID separator '<![CDATA[</br>]]>') T_ID  
						FROM PG_PAY
						WHERE P_RESERV_CODE NOT LIKE CONCAT('%','F','%')
						GROUP BY P_DAY , P_RESERV_CODE ) T 
				 ON PTS.TC_DAY = T.P_DAY AND PTS.TC_RESERV_CODE = T.P_RESERV_CODE
			WHERE PTS.TC_STEP = '00003' 
			<if test="text != null and text != ''">
				AND (
				 PTS.COMP_NAME LIKE CONCAT('%',#{text},'%')				
				)
			</if>
			<choose>
				<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
					  AND (
					      PTS.TC_DAY BETWEEN #{tcDay} AND #{tcDay2}
					      OR PTS.TC_DAY2 BETWEEN #{tcDay} AND #{tcDay2}
					      OR (PTS.TC_DAY <![CDATA[<=]]> #{tcDay} AND PTS.TC_DAY2 >= #{tcDay2} )
				      )
				</when>
				<otherwise>
					   AND (
					      DATE(PTS.TC_DAY) = DATE(NOW())
				      )
				</otherwise>
			</choose>
    	 	<if test="tcApproval != null and tcApproval != ''">
    	  		AND(
		        PTS.TC_RESERV_CODE LIKE CONCAT('%',#{tcApproval},'%')
		      )
    	  	</if>
			GROUP BY PTS.TC_SEQ , PTS.TC_DAY , PTS.TC_RESERV_CODE 
			ORDER BY PTS.TC_DAY DESC
		<include refid="COMMON.sqlPagingBottom" />
	</select>

<!-- 회원사별 시험이력 - 페이징 -->
	<select id="statcompanycnt" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="int">
		<include refid="COMMON.sqlCountTop" />
			SELECT PTS.TC_RESERV_CODE , PTS.TC_DAY , PTS.COMP_NAME , 
				   GROUP_CONCAT(DISTINCT PTR.TR_TRACK_NAME separator '<![CDATA[</br>]]>') TR_TRACK_NAME ,
				   T.APPLY_TIME , T.PAY
			FROM PG_TEST_SCHDULE PTS
			LEFT JOIN PG_TRACK_RESERV PTR ON PTR.TC_SEQ = PTS.TC_SEQ AND PTR.TC_DAY = PTS.TC_DAY 
			LEFT JOIN (SELECT P_DAY , P_RESERV_CODE , SUM(P_APPLY_TIME) AS APPLY_TIME ,SUM((P_PAY)*1.1) AS PAY ,
						GROUP_CONCAT(DISTINCT T_ID separator '<![CDATA[</br>]]>') T_ID  
						FROM PG_PAY
						WHERE P_RESERV_CODE NOT LIKE CONCAT('%','F','%')
						GROUP BY P_DAY , P_RESERV_CODE ) T 
				 ON PTS.TC_DAY = T.P_DAY AND PTS.TC_RESERV_CODE = T.P_RESERV_CODE
			WHERE PTS.TC_STEP = '00003' 
			<if test="text != null and text != ''">
				AND (
				 PTS.COMP_NAME LIKE CONCAT('%',#{text},'%')				
				)
			</if>
			<choose>
				<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
					  AND (
					      PTS.TC_DAY BETWEEN #{tcDay} AND #{tcDay2}
					      OR PTS.TC_DAY2 BETWEEN #{tcDay} AND #{tcDay2}
					      OR (PTS.TC_DAY <![CDATA[<=]]> #{tcDay} AND PTS.TC_DAY2 >= #{tcDay2} )
				      )
				</when>
				<otherwise>
					   AND (
					      DATE(PTS.TC_DAY) = DATE(NOW())
				      )
				</otherwise>
			</choose>
    	 	<if test="tcApproval != null and tcApproval != ''">
    	  		AND(
		        PTS.TC_RESERV_CODE LIKE CONCAT('%',#{tcApproval},'%')
		      )
    	  	</if>
			GROUP BY PTS.TC_SEQ , PTS.TC_DAY , PTS.TC_RESERV_CODE 
			ORDER BY PTS.TC_DAY DESC
		<include refid="COMMON.sqlCountBottom" />
	</select>
	
	<!-- 일자별 입출로그 (전체) -->
	<select id="nodaylog" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
			   SELECT PRL.TC_DAY ,
			 		  PTS.COMP_NAME , 
				   	  MIN(PRL.IN_TIME) AS IN_TIME  , 
				   	  MAX(PRL.OUT_TIME) AS OUT_TIME , 
					  sum(PRL.DIFF_TIME) AS DIFF_TIME , 	
					  PRL.CAR_TAG_ID ,
					  PT.T_NAME ,
					  (SELECT PC.C_NUMBER from PG_CAR PC where PRM.C_CODE = PC.C_CODE) as C_NUMBER
			   FROM PG_RFID_LOG PRL 
			 	 	LEFT JOIN PG_TRACK PT ON PRL.T_ID = PT.T_ID
				 	LEFT JOIN PG_TEST_SCHDULE PTS ON PRL.TC_RESERV_CODE = PTS.TC_RESERV_CODE 
				 	LEFT JOIN PG_RESOURCE_MAPPING PRM ON PRL.CAR_TAG_ID = PRM.R_ID AND PRL.TC_DAY = PRM.TC_DAY and PRM.RM_TYPE = 'C' and PTS.TC_SEQ = PRM.TC_SEQ 
			   WHERE 1=1
			<!-- 검색창란에 예약번호/사업자번호/회사명 입력 -->
		    <if test="text != null and text != ''">
		      AND (
		      	PTS.COMP_NAME LIKE CONCAT('%',#{text},'%')
		      )
		    </if>
		    <choose>
		    	<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
		    		AND(
		    			PTS.TC_DAY BETWEEN #{tcDay} AND #{tcDay2}
				        OR PTS.TC_DAY2 BETWEEN #{tcDay} AND #{tcDay2}
				        OR (PTS.TC_DAY <![CDATA[<=]]> #{tcDay} AND PTS.TC_DAY2 >= #{tcDay2} )
		    		)
		    	</when>
		    	<otherwise>
		    		AND(
		    			DATE(PTS.TC_DAY) = DATE(NOW())
		    		)
		    	</otherwise>
		    </choose>
			GROUP BY PRL.TC_DAY , PTS.COMP_CODE , PT.T_ID
	</select>
	
	<!-- 일자별 입출로그 -->
	<select id="daylog" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
		<include refid="COMMON.sqlPagingTop" />
			 SELECT PRL.TC_DAY ,
			 		  PTS.COMP_NAME , 
				   	  MIN(PRL.IN_TIME) AS IN_TIME  , 
				   	  MAX(PRL.OUT_TIME) AS OUT_TIME , 
					  sum(PRL.DIFF_TIME) AS DIFF_TIME , 	
					  PRL.CAR_TAG_ID ,
					  PT.T_NAME ,
					  (SELECT PC.C_NUMBER from PG_CAR PC where PRM.C_CODE = PC.C_CODE) as C_NUMBER
			   FROM PG_RFID_LOG PRL 
			 	 	LEFT JOIN PG_TRACK PT ON PRL.T_ID = PT.T_ID
				 	LEFT JOIN PG_TEST_SCHDULE PTS ON PRL.TC_RESERV_CODE = PTS.TC_RESERV_CODE 
				 	LEFT JOIN PG_RESOURCE_MAPPING PRM ON PRL.CAR_TAG_ID = PRM.R_ID AND PRL.TC_DAY = PRM.TC_DAY and PRM.RM_TYPE = 'C' and PTS.TC_SEQ = PRM.TC_SEQ 
			   WHERE 1=1
			<!-- 검색창란에 예약번호/사업자번호/회사명 입력 -->
		    <if test="text != null and text != ''">
		      AND (
		      	PTS.COMP_NAME LIKE CONCAT('%',#{text},'%')
		      )
		    </if>
		    <choose>
		    	<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
		    		AND(
		    			PTS.TC_DAY BETWEEN #{tcDay} AND #{tcDay2}
				        OR PTS.TC_DAY2 BETWEEN #{tcDay} AND #{tcDay2}
				        OR (PTS.TC_DAY <![CDATA[<=]]> #{tcDay} AND PTS.TC_DAY2 >= #{tcDay2} )
		    		)
		    	</when>
		    	<otherwise>
		    		AND(
		    			DATE(PTS.TC_DAY) = DATE(NOW())
		    		)
		    	</otherwise>
		    </choose>
			GROUP BY PRL.TC_DAY , PTS.COMP_CODE , PT.T_ID
		<include refid="COMMON.sqlPagingBottom" />
	</select>

	<!-- 일자별 입출로그 - 페이징 --> 
	<select id="daylogcnt" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="int">
		<include refid="COMMON.sqlCountTop" />
			 SELECT PRL.TC_DAY ,
			 		  PTS.COMP_NAME , 
				   	  MIN(PRL.IN_TIME) AS IN_TIME  , 
				   	  MAX(PRL.OUT_TIME) AS OUT_TIME , 
					  sum(PRL.DIFF_TIME) AS DIFF_TIME , 	
					  PRL.CAR_TAG_ID ,
					  PT.T_NAME ,
					  (SELECT PC.C_NUMBER from PG_CAR PC where PRM.C_CODE = PC.C_CODE) as C_NUMBER
			   FROM PG_RFID_LOG PRL 
			 	 	LEFT JOIN PG_TRACK PT ON PRL.T_ID = PT.T_ID
				 	LEFT JOIN PG_TEST_SCHDULE PTS ON PRL.TC_RESERV_CODE = PTS.TC_RESERV_CODE 
				 	LEFT JOIN PG_RESOURCE_MAPPING PRM ON PRL.CAR_TAG_ID = PRM.R_ID AND PRL.TC_DAY = PRM.TC_DAY and PRM.RM_TYPE = 'C' and PTS.TC_SEQ = PRM.TC_SEQ 
			   WHERE 1=1
			<!-- 검색창란에 예약번호/사업자번호/회사명 입력 -->
		    <if test="text != null and text != ''">
		      AND (
		      	PTS.COMP_NAME LIKE CONCAT('%',#{text},'%')
		      )
		    </if>
		    <choose>
		    	<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
		    		AND(
		    			PTS.TC_DAY BETWEEN #{tcDay} AND #{tcDay2}
				        OR PTS.TC_DAY2 BETWEEN #{tcDay} AND #{tcDay2}
				        OR (PTS.TC_DAY <![CDATA[<=]]> #{tcDay} AND PTS.TC_DAY2 >= #{tcDay2} )
		    		)
		    	</when>
		    	<otherwise>
		    		AND(
		    			DATE(PTS.TC_DAY) = DATE(NOW())
		    		)
		    	</otherwise>
		    </choose>
			GROUP BY PRL.TC_DAY , PTS.COMP_CODE , PT.T_ID
		<include refid="COMMON.sqlCountBottom" />
	</select>
	
	<!--노면 센서 리스트 불러오기  -->
	<select id="templist" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
		SELECT T_NICKNAME , T_ID
		FROM PG_ROAD_TEMP
		WHERE 1=1
		GROUP BY T_NICKNAME 
		ORDER BY T_ID 
	</select>
		
	<!-- 기상통계 (기상) 전체-->
	<select id="alltemper" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
		SELECT DAY , AVG_TA , MAX_TA , MIN_TA , RAIN_DAY , DP
		FROM PG_WEATHER_STATIC 
		ORDER BY DAY ASC 
	</select>
	
	<!-- 기상통계 (기상)-->
	<select id="temper" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
		<include refid="COMMON.sqlPagingTop" />
		SELECT DAY , AVG_TA , MAX_TA , MIN_TA , RAIN_DAY , DP
		FROM PG_WEATHER_STATIC 
		WHERE 1=1
		<choose>
			<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
				AND(
				DAY BETWEEN #{tcDay} AND #{tcDay2}
				OR LEFT(DAY,8) = #{tcDay2}
			)
			</when>
			<otherwise>
				AND(
				DATE(DAY) = DATE(NOW())
				)
			</otherwise>
		</choose>
		ORDER BY DAY ASC 
		<include refid="COMMON.sqlPagingBottom" />
	</select>
	
	<!-- 기상통계 (기상) 페이징 -->
	<select id="tempercnt" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="int">
		<include refid="COMMON.sqlCountTop" />
		SELECT DAY , AVG_TA , MAX_TA , MIN_TA , RAIN_DAY , DP
		FROM PG_WEATHER_STATIC
		WHERE 1=1
		<choose>
			<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
				AND(
				DAY BETWEEN #{tcDay} AND #{tcDay2}
				OR LEFT(DAY,8) = #{tcDay2}
			)
			</when>
			<otherwise>
				AND(
				DATE(DAY) = DATE(NOW())
				)
			</otherwise>
		</choose>
		ORDER BY DAY ASC  
		<include refid="COMMON.sqlCountBottom" />
	</select>
	
	<!-- 기상통계 (기상) 전체-->
	<select id="allpressure" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
		SELECT DAY , AVG_RH , AVG_WS , AVG_PA , MAX_PA , MIN_PA 
		FROM PG_WEATHER_STATIC 
		ORDER BY DAY ASC 
	</select>
	
	<!-- 기상통계 (기상)-->
	<select id="pressure" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
		<include refid="COMMON.sqlPagingTop" />
		SELECT DAY , AVG_RH , AVG_WS , AVG_PA , MAX_PA , MIN_PA 
		FROM PG_WEATHER_STATIC 
		WHERE 1=1
		<choose>
			<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
				AND(
				DAY BETWEEN #{tcDay} AND #{tcDay2}
				OR LEFT(DAY,8) = #{tcDay2}
			)
			</when>
			<otherwise>
				AND(
				DATE(DAY) = DATE(NOW())
				)
			</otherwise>
		</choose>
		ORDER BY DAY ASC  
		<include refid="COMMON.sqlPagingBottom" />
	</select>
	
	<!-- 기상통계 (기상) 페이징 -->
	<select id="pressurecnt" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="int">
		<include refid="COMMON.sqlCountTop" />
		SELECT DAY , AVG_RH , AVG_WS , AVG_PA , MAX_PA , MIN_PA 
		FROM PG_WEATHER_STATIC
		WHERE 1=1
		<choose>
			<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
				AND(
				DAY BETWEEN #{tcDay} AND #{tcDay2}
				OR LEFT(DAY,8) = #{tcDay2}
			)
			</when>
			<otherwise>
				AND(
				DATE(DAY) = DATE(NOW())
				)
			</otherwise>
		</choose>
		ORDER BY DAY ASC  
		<include refid="COMMON.sqlCountBottom" />
	</select>
	
	
		<!--노면 온도 엑셀 다운로드 (5분단위)-->
		<select id="tempexceldown" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
			SELECT LEFT(ROAD_IN_TIME, 12) AS ROAD_IN_TIME , T_NICKNAME , ROAD_TEMP 
			FROM PG_ROAD_TEMP 
			GROUP BY ROAD_IN_TIME , T_NICKNAME
			ORDER BY ROAD_IN_TIME ASC
		</select>	
		
		<!--노면 온도 일별 (15분단위)-->
		<select id="tempday" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
			SELECT LEFT(REG_DT,12) AS REG_DT , T_NM , STAT_TP , TEMP , T_ID
			FROM PG_ROAD_TEMP_STATIC
			WHERE 1=1 
				<if test = 'tId != null and tId != ""'>
					AND T_ID LIKE #{tId}
				</if>
				<choose>
					<when test='oneDate != null and oneDate != ""'>
						AND STAT_TP = '0' AND SUBSTRING(REG_DT,1,8) = #{oneDate} 
					</when>
					<otherwise>
						AND STAT_TP = '0' AND DATE(REG_DT) = DATE(NOW())
					</otherwise>
				</choose>
			GROUP BY REG_DT , T_NM 
			ORDER BY REG_DT  ASC
		</select>
		
		<!--노면 온도 기간 (하루)-->
		<select id="tempmonth" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
			SELECT LEFT(REG_DT,12) AS REG_DT , T_NM , STAT_TP , TEMP , T_ID
			FROM PG_ROAD_TEMP_STATIC 
			WHERE STAT_TP = '1'
				<if test = 'tId != null and tId != ""'>
					AND  T_ID LIKE CONCAT('%',#{tId},'%')
				</if>
				<if test = "tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
					AND (
						REG_DT BETWEEN #{tcDay} AND #{tcDay2}
						OR LEFT(REG_DT,8) = #{tcDay2}
					)
				</if>
			ORDER BY REG_DT  ASC
		</select>
		
		<!--노면 온도 연도 (1주)-->
		<select id="tempyear" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
			SELECT LEFT(REG_DT,12) AS REG_DT , T_NM , STAT_TP , TEMP , T_ID , W_COUNT
			FROM PG_ROAD_TEMP_STATIC 
			WHERE STAT_TP = '2'
				<if test = 'tId != null and tId != ""'>
					AND  T_ID LIKE CONCAT('%',#{tId},'%')
				</if>
				<if test = 'year != null and year != ""'>
					AND (
						SUBSTRING(REG_DT,1,4) = #{year} 
					) 
				</if>
			ORDER BY W_COUNT  ASC
		</select>
		
		<!-- 주유 통계 (차량별) -->
		<select id="carsection" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
			SELECT ptp.VHCL_RGSNO ,po.CAR_OIL , po.PUMP_END , po.QTY , SUM(QTY) as SUMQTY
			FROM PG_OIL po
			LEFT JOIN PG_HINT_CAR ptp ON ptp.VHCL_CODE = po.VHCL_CODE
			WHERE 1=1
			<choose>
				<when test="vhclName == '' and vhclRgsno == '' and carOil == '' and stDay == '' and stDay2 == ''">
					AND 1!=1
				</when>
				<otherwise>
					<if test="vhclName != null and vhclName != ''">
						AND (
						 ptp.VHCL_NAME LIKE CONCAT('%',#{vhclName},'%')				
						)
					</if>
					<if test="vhclRgsno != null and vhclRgsno != ''">
						AND (
						 ptp.VHCL_RGSNO LIKE CONCAT('%',#{vhclRgsno},'%')				
						)
					</if>
					<if test="carOil != null and carOil != ''">
						AND (
						 po.CAR_OIL LIKE CONCAT('%',#{carOil},'%')				
						)
					</if>
					<if test = "stDay != null and stDay != '' and stDay2 != null and stDay2 != ''">
						AND (
							PUMP_END BETWEEN DATE(#{stDay}) AND DATE(#{stDay2})+1
						)
					</if>
				</otherwise>
			</choose>
			GROUP by ptp.VHCL_RGSNO with ROLLUP
		</select>
		
		<!--주유 통계 기간별(다운로드)-->
		<select id="alloillist" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
			select LEFT (PUMP_END , 8) AS PUMP_END , sum(OIL1) AS GASOLINE , sum(OIL2) AS DIESEL 
			from (
			    select sum(QTY) as OIL1, 0 as OIL2 , PUMP_END 
			    from PG_OIL
			    where CAR_OIL = '001' 
			    GROUP BY LEFT(PUMP_END , 8) 
			    union
			    select 0 as OIL1, sum(QTY) as OIL2 , PUMP_END
			    from PG_OIL
			    where CAR_OIL = '002' 
			    GROUP BY LEFT(PUMP_END , 8)
			         ) A
			WHERE 1=1
			<choose>
				<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
						AND(
							PUMP_END BETWEEN #{tcDay} AND #{tcDay2}
							OR LEFT(PUMP_END,8) = #{tcDay2}
						) 
				</when>
				<otherwise>
						AND(
							 DATE(PUMP_END) BETWEEN DATE_ADD(NOW(),INTERVAL - 1 WEEK) AND NOW()
						)
				</otherwise>
			</choose>
			GROUP BY LEFT (PUMP_END , 8)
		</select>
		<!--주유 통계 기간별-->
		<select id="oillist" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
			<include refid="COMMON.sqlPagingTop" />
			select LEFT (PUMP_END , 8) AS PUMP_END , sum(OIL1) AS GASOLINE , sum(OIL2) AS DIESEL 
			from (
			    select sum(QTY) as OIL1, 0 as OIL2 , PUMP_END 
			    from PG_OIL
			    where CAR_OIL = '001' 
			    GROUP BY LEFT(PUMP_END , 8) 
			    union
			    select 0 as OIL1, sum(QTY) as OIL2 , PUMP_END
			    from PG_OIL
			    where CAR_OIL = '002'
			    GROUP BY LEFT(PUMP_END , 8)
			         ) A
			WHERE 1=1 
			<choose>
				<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
						AND(
							PUMP_END BETWEEN #{tcDay} AND #{tcDay2}
							OR LEFT(PUMP_END,8) = #{tcDay2}
						) 
				</when>
				<otherwise>
						AND(
							 DATE(PUMP_END) BETWEEN DATE_ADD(NOW(),INTERVAL - 1 WEEK) AND NOW()
						)
				</otherwise>
			</choose>
			GROUP BY LEFT (PUMP_END , 8)
			<include refid="COMMON.sqlPagingBottom" />
		</select>
		<!--주유 통계 기간별 페이징  -->
		<select id="oillistcnt" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="int">
			<include refid="COMMON.sqlCountTop" />
			select LEFT (PUMP_END , 8) AS PUMP_END , sum(OIL1) AS GASOLINE , sum(OIL2) AS DIESEL 
			from (
			    select sum(QTY) as OIL1, 0 as OIL2 , PUMP_END 
			    from PG_OIL
			    where CAR_OIL = '001' 
			    GROUP BY LEFT(PUMP_END , 8) 
			    union
			    select 0 as OIL1, sum(QTY) as OIL2 , PUMP_END
			    from PG_OIL
			    where CAR_OIL = '002' 
			    GROUP BY LEFT(PUMP_END , 8)
			         ) A
			WHERE 1=1
			<choose>
				<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
						AND(
							PUMP_END BETWEEN #{tcDay} AND #{tcDay2}
							OR LEFT(PUMP_END,8) = #{tcDay2}
						) 
				</when>
				<otherwise>
						AND(
							 DATE(PUMP_END) BETWEEN DATE_ADD(NOW(),INTERVAL - 1 WEEK) AND NOW()
						)
				</otherwise>
			</choose>
			GROUP BY LEFT (PUMP_END , 8)
			<include refid="COMMON.sqlCountBottom" />
		</select>
		
		<!-- 월별  -->
		<!--주유 통계 기간별(다운로드)-->
		<select id="allmonth" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
			select MONTH(date(PUMP_END))  AS PUMP_END , sum(OIL1) AS GASOLINE , sum(OIL2) AS DIESEL 
			from (
			    select sum(QTY) as OIL1, 0 as OIL2 , PUMP_END 
			    from PG_OIL
			    where CAR_OIL = '001'
			    GROUP BY LEFT(PUMP_END , 6)
			    union
			    select 0 as OIL1, sum(QTY) as OIL2 , PUMP_END
			    from PG_OIL
			    where CAR_OIL = '002'
			    GROUP BY LEFT(PUMP_END , 6)
			         ) A 
			WHERE 1=1
			<choose>
				<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
					AND (
						PUMP_END BETWEEN #{tcDay} AND #{tcDay2}
						OR LEFT(PUMP_END,8) = #{tcDay2}
					)
				</when>
				
				<otherwise>
					AND(
						LEFT(PUMP_END , 4) = #{year}
					)
				</otherwise>
			</choose>
			GROUP BY LEFT(PUMP_END , 6)
		</select>
		<!--주유 통계 기간별-->
		<select id="month" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo">
			<include refid="COMMON.sqlPagingTop" />
			select MONTH(date(PUMP_END))  AS PUMP_END , sum(OIL1) AS GASOLINE , sum(OIL2) AS DIESEL 
			from (
			    select sum(QTY) as OIL1, 0 as OIL2 , PUMP_END 
			    from PG_OIL
			    where CAR_OIL = '001'
			    GROUP BY LEFT(PUMP_END , 6)
			    union
			    select 0 as OIL1, sum(QTY) as OIL2 , PUMP_END
			    from PG_OIL
			    where CAR_OIL = '002'
			    GROUP BY LEFT(PUMP_END , 6)
			         ) A 
			WHERE 1=1
			<choose>
				<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
					AND (
						PUMP_END BETWEEN #{tcDay} AND #{tcDay2}
						OR LEFT(PUMP_END,8) = #{tcDay2}
					)
				</when>
				
				<otherwise>
					AND(
						LEFT(PUMP_END , 4) = #{year}
					)
				</otherwise>
			</choose>
			GROUP BY LEFT(PUMP_END , 6)
			<include refid="COMMON.sqlPagingBottom" />
		</select>
		<!--주유 통계 기간별 페이징  -->
		<select id="monthcnt" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="int">
			<include refid="COMMON.sqlCountTop" />
			select MONTH(date(PUMP_END))  AS PUMP_END , sum(OIL1) AS GASOLINE , sum(OIL2) AS DIESEL 
			from (
			    select sum(QTY) as OIL1, 0 as OIL2 , PUMP_END 
			    from PG_OIL
			    where CAR_OIL = '001'
			    GROUP BY LEFT(PUMP_END , 6)
			    union
			    select 0 as OIL1, sum(QTY) as OIL2 , PUMP_END
			    from PG_OIL
			    where CAR_OIL = '002'
			    GROUP BY LEFT(PUMP_END , 6)
			         ) A 
			WHERE 1=1
			<choose>
				<when test="tcDay != null and tcDay != '' and tcDay2 != null and tcDay2 != ''">
					AND (
						PUMP_END BETWEEN #{tcDay} AND #{tcDay2}
						OR LEFT(PUMP_END,8) = #{tcDay2}
					)
				</when>
				
				<otherwise>
					AND(
						LEFT(PUMP_END , 4) = #{year}
					)
				</otherwise>
			</choose>
			GROUP BY LEFT(PUMP_END , 6)
			<include refid="COMMON.sqlCountBottom" />
		</select>
		
		<!-- 일별 휘발유 합계 -->
		<select id="dayg" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="String">
			SELECT SUM(GASOLINE) AS GASOLINE 
			from(
			select LEFT (PUMP_END , 8) AS PUMP_END , sum(OIL1) AS GASOLINE 
			from (
			    select sum(QTY) as OIL1, PUMP_END 
			    from PG_OIL
			    where CAR_OIL = '001' 
			    GROUP BY LEFT(PUMP_END , 8) 
			      ) A
			WHERE 1=1
			<choose>
				<when test="tcDay != null and tcDay !='' and tcDay2 != null and tcDay2 != ''">
					AND(
						PUMP_END BETWEEN #{tcDay} AND #{tcDay2}
						OR LEFT(PUMP_END,8) = #{tcDay2}							
					)
				</when>
				
				<otherwise>
					AND(
						DATE(PUMP_END) BETWEEN DATE_ADD(NOW(),INTERVAL - 1 WEEK) AND NOW()
					)
				</otherwise>
			</choose>
			GROUP BY LEFT (PUMP_END , 8)
			) T
		</select>
		<!-- 일별 경유 합계 -->
		<select id="dayd" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="String">
			SELECT SUM(DIESEL) AS DIESEL
			from(
			select LEFT (PUMP_END , 8) AS PUMP_END , sum(OIL2) AS DIESEL 
			from (
			    select sum(QTY) as OIL2 , PUMP_END
			    from PG_OIL
			    where CAR_OIL = '002'
			    GROUP BY LEFT(PUMP_END , 8)
			         ) A
			WHERE 1=1
			<choose>
				<when test="tcDay != null and tcDay !='' and tcDay2 != null and tcDay2 != ''">
					AND(
						PUMP_END BETWEEN #{tcDay} AND #{tcDay2}
						OR LEFT(PUMP_END,8) = #{tcDay2}							
					)
				</when>
				
				<otherwise>
					AND(
						DATE(PUMP_END) BETWEEN DATE_ADD(NOW(),INTERVAL - 1 WEEK) AND NOW()
					)
				</otherwise>
			</choose>
			GROUP BY LEFT (PUMP_END , 8)
			) T
		</select>
		
		<!-- 월별 휘발유 합계 -->
		<select id="monthg" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="String">
			SELECT SUM(GASOLINE) AS GASOLINE 
			FROM (select MONTH(date(PUMP_END))  AS PUMP_END , sum(OIL1) AS GASOLINE 
			from (
			    select sum(QTY) as OIL1, PUMP_END 
			    from PG_OIL
			    where CAR_OIL = '001'
			    GROUP BY LEFT(PUMP_END , 6)
			             ) A 
			WHERE LEFT(PUMP_END , 4) = #{year}
			GROUP BY LEFT(PUMP_END , 6)
			) T
		</select>
		
		<!-- 월별 경유 합계 -->
		<select id="monthd" parameterType="com.hankook.pg.content.admin.statistics.dto.StatisticsVo" resultType="String">
			SELECT SUM(DIESEL) AS DIESEL
			FROM (select MONTH(date(PUMP_END))  AS PUMP_END , sum(OIL2) AS DIESEL 
			from (
			    select sum(QTY) as OIL2 , PUMP_END
			    from PG_OIL
			    where CAR_OIL = '002'
			    GROUP BY LEFT(PUMP_END , 6)
			         ) A 
			WHERE LEFT(PUMP_END , 4) = #{year}
			GROUP BY LEFT(PUMP_END , 6)
			) T
		</select>
</mapper>